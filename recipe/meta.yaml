{% set version = "3.0.2" %}

package:
  name: tsnecuda
  version: {{ version }}

source:
  - url: https://github.com/CannyLab/tsne-cuda/archive/refs/tags/{{ version }}.tar.gz
    sha256: 02a6b6d5367f0e0658a9362aa8bbc7b043af74d64a56ac849c640c57f8d22bf0
  # include submodule (not in github tarball due to dear-github/dear-github#214), c.f.
  # https://github.com/CannyLab/tsne-cuda/tree/{{ version }}/third_party
  - git_url: https://github.com/jarro2783/cxxopts.git
    git_rev: c713b44d92e4ea2569101fa6bdf60afa311b29a3
    folder: third_party/cxxopts


build:
  number: 0
  # only linux for the moment
  skip: true  # [not linux]
  skip: true  # [cuda_compiler_version == "None"]
  string: cuda{{ cuda_compiler_version | replace('.', '') }}py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}

requirements:
  build:
    - {{ stdlib('c') }}
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - {{ compiler('cuda') }}
    - cmake
    - make
  host:
    - python
    - pip
    # package uses zmq hpp-headers
    - cppzmq
    - gflags
    - gmock
    - libblas
    - liblapack
    - libfaiss
  run:
    - python
    - numpy
    # despite building with cppzmq, conda wants zeromq here
    - zeromq
test:
  imports:
    - tsnecuda
  commands:
    # wants to load cublas unconditionally, which fails in CI
    # - python -c "import tsnecuda; tsnecuda.test()"

about:
  home: https://github.com/CannyLab/tsne-cuda
  license: BSD-3-Clause AND MIT
  license_file:
    - LICENSE.tsnecuda
    - LICENSE.cxxopt

  summary: GPU Accelerated t-SNE for CUDA with Python bindings
  dev_url: https://github.com/CannyLab/tsne-cuda

extra:
  recipe-maintainers:
    - h-vetinari
    - DavidMChan
